Lap 8 : RTOS (Real-time Operating System)
#define ledPIN1 4
#define ledPIN2 13
#define ledPIN3 2
#define ledPIN4 12

void setup() {
  /*สร้าง task ด้วยคำสั่ง xTaskCreate() มี parameter ดังนี้
    xTaskCreate( pvTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask)*/
  xTaskCreate(&first_task, "first_task", 1024, NULL, 5, NULL);  // สร้าง task ที่ 1
  xTaskCreate(&second_task,"second_task",1024, NULL, 5, NULL);  // สร้าง task ที่ 2
  xTaskCreate(&third_task, "third_task", 1024, NULL, 5, NULL);  // สร้าง task ที่ 1
  xTaskCreate(&fourth_task,"fourth_task",1024, NULL, 5, NULL);  // สร้าง task ที่ 2
}
// ฟังก์ชัน loop ไม่ได้ใช้งาน เนื่องจากฟังก์ชันแต่ละงานจะทำงานแบบวนลูปอยู่แล้ว
void loop() {
}
//สร้างฟังก์ชันการทำงานสำหรับ task ที่ 1
void first_task(void *pvParameter){       // ไม่ส่งค่า parameterใดๆเข้าฟังก์ชัน
  pinMode(ledPIN1,OUTPUT);
  while(true) {
    digitalWrite(ledPIN1, HIGH);
    vTaskDelay(100 / portTICK_RATE_MS);   // คำสั่ง vTaskDelay สำหรับกำหนดดีเลย์ให้กับการทำงานแบบ multitasking
    digitalWrite(ledPIN1, LOW);
    vTaskDelay(100 / portTICK_RATE_MS);
  }
}
//สร้างฟังก์ชันการทำงานสำหรับ task ที่ 2
void second_task(void *pvParameter){
  pinMode(ledPIN2,OUTPUT);
  while(true) {
    digitalWrite(ledPIN2, HIGH);
    vTaskDelay(500 / portTICK_RATE_MS);
    digitalWrite(ledPIN2, LOW);
    vTaskDelay(500 / portTICK_RATE_MS);
  }
}
//สร้างฟังก์ชันการทำงานสำหรับ task ที่ 3
void third_task(void *pvParameter){
  pinMode(ledPIN3,OUTPUT);
  while(true) {
    digitalWrite(ledPIN3, HIGH);
    vTaskDelay(500 / portTICK_RATE_MS);
    digitalWrite(ledPIN3, LOW);
    vTaskDelay(500 / portTICK_RATE_MS);
  }
}
//สร้างฟังก์ชันการทำงานสำหรับ task ที่ 4
void fourth_task(void *pvParameter){
  pinMode(ledPIN4,OUTPUT);
  while(true) {
    digitalWrite(ledPIN4, HIGH);
    vTaskDelay(500 / portTICK_RATE_MS);
    digitalWrite(ledPIN4, LOW);
    vTaskDelay(500 / portTICK_RATE_MS);
  }
}